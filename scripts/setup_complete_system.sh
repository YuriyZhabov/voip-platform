#!/bin/bash

# –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VoIP —Å–∏—Å—Ç–µ–º—ã
# –ê–≤—Ç–æ—Ä: Kiro AI Assistant
# –î–∞—Ç–∞: $(date)

set -e

echo "=== –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VoIP —Å–∏—Å—Ç–µ–º—ã ==="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ FreePBX
wait_for_freepbx() {
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ FreePBX..."
    local max_attempts=60
    local attempt=0
    
    while [ $attempt -lt $max_attempts ]; do
        if docker exec freepbx-server asterisk -rx "core show version" >/dev/null 2>&1; then
            log "FreePBX –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
            return 0
        fi
        
        echo -n "."
        sleep 10
        ((attempt++))
    done
    
    error "FreePBX –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Asterisk
apply_asterisk_configs() {
    log "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Asterisk..."
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    docker cp configs/asterisk/pjsip.conf freepbx-server:/etc/asterisk/pjsip_custom.conf
    docker cp configs/asterisk/extensions_custom.conf freepbx-server:/etc/asterisk/extensions_custom.conf
    docker cp configs/asterisk/ari.conf freepbx-server:/etc/asterisk/ari.conf
    docker cp configs/asterisk/http_custom.conf freepbx-server:/etc/asterisk/http_custom.conf
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    docker exec freepbx-server asterisk -rx "core reload"
    docker exec freepbx-server asterisk -rx "pjsip reload"
    
    log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Asterisk –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SIP —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
check_sip_registration() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ SIP —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å Novofon..."
    
    local registration_status=$(docker exec freepbx-server asterisk -rx "pjsip show registrations" | grep novofon || echo "not_found")
    
    if [[ "$registration_status" == "not_found" ]]; then
        warn "SIP —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å Novofon –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    else
        log "SIP —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: $registration_status"
        return 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ LiveKit –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_livekit_connection() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è LiveKit –∞–≥–µ–Ω—Ç–∞..."
    
    local livekit_logs=$(docker logs livekit-agent --tail=5 2>&1)
    
    if echo "$livekit_logs" | grep -q "registered worker"; then
        log "LiveKit –∞–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω"
        return 0
    else
        warn "LiveKit –∞–≥–µ–Ω—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ARI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
test_ari_connection() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ARI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ ARI
    docker exec livekit-agent python /app/configs/agent/simple_ari_client.py &
    local ari_pid=$!
    
    sleep 5
    
    if kill -0 $ari_pid 2>/dev/null; then
        log "ARI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        kill $ari_pid 2>/dev/null || true
        return 0
    else
        warn "–ü—Ä–æ–±–ª–µ–º—ã —Å ARI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º"
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞
create_test_call() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–≤–æ–Ω–∫–∞..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏–∞–ª–ø–ª–∞–Ω–∞
    docker exec freepbx-server asterisk -rx "channel originate Local/test@novofon-incoming extension test@novofon-incoming"
    
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    local active_channels=$(docker exec freepbx-server asterisk -rx "core show channels" | grep -c "active channel" || echo "0")
    
    if [ "$active_channels" -gt 0 ]; then
        log "–¢–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        warn "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
main() {
    log "–ù–∞—á–∞–ª–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã"
    
    # –®–∞–≥ 1: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ FreePBX
    if ! wait_for_freepbx; then
        error "FreePBX –Ω–µ –≥–æ—Ç–æ–≤, –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
        exit 1
    fi
    
    # –®–∞–≥ 2: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    apply_asterisk_configs
    
    # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    local checks_passed=0
    local total_checks=4
    
    if check_sip_registration; then
        ((checks_passed++))
    fi
    
    if check_livekit_connection; then
        ((checks_passed++))
    fi
    
    if test_ari_connection; then
        ((checks_passed++))
    fi
    
    if create_test_call; then
        ((checks_passed++))
    fi
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç
    log "–ü—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ: $checks_passed –∏–∑ $total_checks"
    
    if [ $checks_passed -eq $total_checks ]; then
        log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        log "–ì–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–µ–º—É –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ –Ω–∞ –Ω–æ–º–µ—Ä: $NOVOFON_NUMBER"
    elif [ $checks_passed -ge 2 ]; then
        warn "‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—á–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è."
    else
        error "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞."
        exit 1
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    show_system_status
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
show_system_status() {
    log "=== –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã ==="
    
    echo "üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: $NOVOFON_NUMBER"
    echo "üåê LiveKit URL: $LIVEKIT_URL"
    echo "üîó SIP URI: $LIVEKIT_SIP_URI"
    echo "üè† –î–æ–º–µ–Ω: $MY_DOMAIN"
    echo "üåç –ü—É–±–ª–∏—á–Ω—ã–π IP: $MY_PUBLIC_IP"
    
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose ps
    
    echo ""
    echo "üìã –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "  - docker-compose logs -f livekit-agent"
    echo "  - docker exec freepbx-server asterisk -rvvv"
    echo "  - ./scripts/monitor_incoming_calls.sh"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"