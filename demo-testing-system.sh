#!/bin/bash

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è VoIP –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä
# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_demo() { echo -e "${PURPLE}[DEMO]${NC} $1"; }

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
show_header() {
    clear
    echo -e "${PURPLE}"
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                              ‚ïë
‚ïë    üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø VoIP –ê–†–•–ò–¢–ï–ö–¢–£–†      ‚ïë
‚ïë                                                              ‚ïë
‚ïë    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫             ‚ïë
‚ïë    –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∞–≥–µ–Ω—Ç—É –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∏—Å—Ç–µ–º—É        ‚ïë
‚ïë                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
    echo ""
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
show_architectures() {
    log_demo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo ""
    
    echo -e "${GREEN}üìã –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ A: –¢–µ–∫—É—â–∞—è (LiveKit + ARI)${NC}"
    echo "   Novofon ‚Üí Asterisk ‚Üí ARI ‚Üí LiveKit Agent ‚Üí AI Services"
    echo "   ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
    echo "   ‚ùå –°–ª–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
    echo ""
    
    echo -e "${BLUE}üìã –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ B: –ü—Ä—è–º–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è${NC}"
    echo "   Novofon ‚Üí Asterisk ‚Üí Direct Python Agent ‚Üí AI Services"
    echo "   ‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å"
    echo "   ‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
    echo ""
    
    echo -e "${YELLOW}üìã –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ C: –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã${NC}"
    echo "   Novofon ‚Üí Asterisk ‚Üí Message Queue ‚Üí Multiple Agents ‚Üí AI Services"
    echo "   ‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å"
    echo "   ‚ùå –°–ª–æ–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ä–µ–¥—ã
demo_create_environment() {
    log_demo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã A..."
    echo ""
    
    log_info "–ö–æ–º–∞–Ω–¥–∞: ./testing/shared/scripts/test-env-manager.sh create env-a"
    
    if [ -d "testing/env-a" ]; then
        log_warning "–°—Ä–µ–¥–∞ env-a —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
        mkdir -p testing/env-a/{configs,results,logs}
        log_success "‚úì –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞"
    fi
    
    log_info "–ß—Ç–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è:"
    echo "  üìÅ testing/env-a/configs/     - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "  üìÅ testing/env-a/results/     - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤"
    echo "  üìÅ testing/env-a/logs/        - –õ–æ–≥–∏"
    echo "  üìÑ docker-compose.test-a.yml  - Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"
    echo "  üìÑ .env.test                  - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–∑–æ–ª—è—Ü–∏–∏
demo_isolation() {
    log_demo "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ —Å—Ä–µ–¥..."
    echo ""
    
    log_info "–ö–∞–∂–¥–∞—è —Å—Ä–µ–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–∞:"
    echo ""
    
    echo -e "${GREEN}üîí –°–µ—Ç–µ–≤–∞—è –∏–∑–æ–ª—è—Ü–∏—è:${NC}"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ A: —Å–µ—Ç—å test-a-network (172.21.0.0/16)"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ B: —Å–µ—Ç—å test-b-network (172.22.0.0/16)"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ C: —Å–µ—Ç—å test-c-network (172.23.0.0/16)"
    echo ""
    
    echo -e "${BLUE}üîí –ò–∑–æ–ª—è—Ü–∏—è –ø–æ—Ä—Ç–æ–≤:${NC}"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ A: HTTP 8081, SIP 5081, Redis 6371"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ B: HTTP 8082, SIP 5082, Redis 6372"
    echo "  ‚Ä¢ –°—Ä–µ–¥–∞ C: HTTP 8083, SIP 5083, Redis 6373"
    echo ""
    
    echo -e "${YELLOW}üîí –ò–∑–æ–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö:${NC}"
    echo "  ‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–µ Docker volumes"
    echo "  ‚Ä¢ –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "  ‚Ä¢ –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
demo_testing() {
    log_demo "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    echo ""
    
    log_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã —Ç–µ—Å—Ç–æ–≤:"
    echo ""
    
    echo -e "${GREEN}üß™ –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "  ./testing/shared/scripts/run-tests.sh test env-a"
    echo "  ‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Asterisk"
    echo "  ‚úì SIP —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
    echo "  ‚úì ARI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    echo "  ‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    echo "  ‚úì Redis"
    echo "  ‚úì –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    echo ""
    
    echo -e "${BLUE}üîÑ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "  ./testing/shared/scripts/run-tests.sh compare env-a env-b"
    echo "  üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo "  üìà –ê–Ω–∞–ª–∏–∑ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏"
    echo "  üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç"
    echo ""
    
    echo -e "${YELLOW}‚ö° –ù–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "  ./testing/shared/scripts/run-tests.sh load env-a 10"
    echo "  üî• –¢–µ—Å—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∑–≤–æ–Ω–∫–∞–º–∏"
    echo "  üìä –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
demo_monitoring() {
    log_demo "–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    echo ""
    
    log_info "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo ""
    
    echo -e "${GREEN}üìä Prometheus (http://localhost:9090):${NC}"
    echo "  ‚Ä¢ –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ —Å–æ –≤—Å–µ—Ö —Å—Ä–µ–¥"
    echo "  ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    echo "  ‚Ä¢ –ê–ª–µ—Ä—Ç—ã –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    echo ""
    
    echo -e "${BLUE}üìà Grafana (http://localhost:3000):${NC}"
    echo "  ‚Ä¢ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫"
    echo "  ‚Ä¢ –î–∞—à–±–æ—Ä–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ä–µ–¥—ã"
    echo "  ‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏"
    echo ""
    
    echo -e "${YELLOW}üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:${NC}"
    echo "  ‚Ä¢ Node Exporter - —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã"
    echo "  ‚Ä¢ cAdvisor - –º–µ—Ç—Ä–∏–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  ‚Ä¢ Custom exporters - VoIP –º–µ—Ç—Ä–∏–∫–∏"
    echo ""
    
    log_info "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo "  cd testing/shared/monitoring"
    echo "  docker-compose -f docker-compose.monitoring.yml up -d"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
demo_results() {
    log_demo "–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    echo ""
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ CSV —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    mkdir -p testing/results
    cat > testing/results/demo_results.csv << EOF
timestamp,environment,test_name,result
2025-01-18 10:00:01,env-a,asterisk_connection,PASS
2025-01-18 10:00:02,env-a,sip_registration,PASS
2025-01-18 10:00:03,env-a,ari_interface,PASS
2025-01-18 10:00:04,env-a,database_connection,PASS
2025-01-18 10:00:05,env-a,redis_connection,PASS
2025-01-18 10:00:06,env-a,asterisk_response_time,0.234
2025-01-18 10:00:07,env-a,cpu_usage,15.2
2025-01-18 10:00:08,env-a,overall_success_rate,100.0
2025-01-18 10:01:01,env-b,asterisk_connection,PASS
2025-01-18 10:01:02,env-b,sip_registration,PASS
2025-01-18 10:01:03,env-b,ari_interface,WARN
2025-01-18 10:01:04,env-b,database_connection,PASS
2025-01-18 10:01:05,env-b,redis_connection,PASS
2025-01-18 10:01:06,env-b,asterisk_response_time,0.189
2025-01-18 10:01:07,env-b,cpu_usage,12.8
2025-01-18 10:01:08,env-b,overall_success_rate,85.7
EOF
    
    log_success "‚úì –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω"
    echo ""
    
    log_info "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:"
    echo "  ./testing/shared/scripts/run-tests.sh results"
    echo ""
    
    echo -e "${GREEN}üìä –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:${NC}"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ Timestamp           ‚îÇ Env     ‚îÇ Test                    ‚îÇ Result ‚îÇ"
    echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    echo "‚îÇ 2025-01-18 10:00:01 ‚îÇ env-a   ‚îÇ asterisk_connection     ‚îÇ PASS   ‚îÇ"
    echo "‚îÇ 2025-01-18 10:00:06 ‚îÇ env-a   ‚îÇ asterisk_response_time  ‚îÇ 0.234  ‚îÇ"
    echo "‚îÇ 2025-01-18 10:00:08 ‚îÇ env-a   ‚îÇ overall_success_rate    ‚îÇ 100.0  ‚îÇ"
    echo "‚îÇ 2025-01-18 10:01:06 ‚îÇ env-b   ‚îÇ asterisk_response_time  ‚îÇ 0.189  ‚îÇ"
    echo "‚îÇ 2025-01-18 10:01:08 ‚îÇ env-b   ‚îÇ overall_success_rate    ‚îÇ 85.7   ‚îÇ"
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo ""
    
    log_info "–í—ã–≤–æ–¥—ã –∏–∑ –ø—Ä–∏–º–µ—Ä–∞:"
    echo "  üèÜ –°—Ä–µ–¥–∞ B –±—ã—Å—Ç—Ä–µ–µ (0.189s vs 0.234s)"
    echo "  üèÜ –°—Ä–µ–¥–∞ A –Ω–∞–¥–µ–∂–Ω–µ–µ (100% vs 85.7%)"
    echo "  üí° –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"
    echo ""
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
demo_security() {
    log_demo "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    echo ""
    
    log_info "–ú–µ—Ö–∞–Ω–∏–∑–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
    echo ""
    
    echo -e "${GREEN}üõ°Ô∏è –ò–∑–æ–ª—è—Ü–∏—è –æ—Ç –ø—Ä–æ–¥–∞–∫—à–Ω–∞:${NC}"
    echo "  ‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–µ SIP –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤"
    echo "  ‚Ä¢ –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Docker —Å–µ—Ç–∏"
    echo "  ‚Ä¢ –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "  ‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–µ API –∫–ª—é—á–∏"
    echo ""
    
    echo -e "${BLUE}üîÑ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
    echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥—ã: test-env-manager.sh stop env-a"
    echo "  ‚Ä¢ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: test-env-manager.sh clean env-a"
    echo "  ‚Ä¢ –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
    echo "  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –±—ç–∫–∞–ø—ã"
    echo ""
    
    echo -e "${YELLOW}üìù –ê—É–¥–∏—Ç –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "  ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π"
    echo "  ‚Ä¢ –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "  ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–∞"
    echo "  ‚Ä¢ –û—Ç—á–µ—Ç—ã –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"
    echo ""
}

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
interactive_menu() {
    while true; do
        echo ""
        log_demo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é:"
        echo "  1) üèóÔ∏è  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        echo "  2) üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã"
        echo "  3) üîí –ò–∑–æ–ª—è—Ü–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
        echo "  4) üß™ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
        echo "  5) üìä –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
        echo "  6) üìà –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
        echo "  7) üõ°Ô∏è  –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫–∞—Ç"
        echo "  8) üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"
        echo "  9) üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç"
        echo "  0) ‚ùå –í—ã—Ö–æ–¥"
        echo ""
        
        read -p "–í–∞—à –≤—ã–±–æ—Ä (0-9): " choice
        
        case $choice in
            1) show_architectures ;;
            2) demo_create_environment ;;
            3) demo_isolation ;;
            4) demo_testing ;;
            5) demo_monitoring ;;
            6) demo_results ;;
            7) demo_security ;;
            8) show_documentation ;;
            9) quick_start ;;
            0) log_info "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"; exit 0 ;;
            *) log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑." ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

# –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
show_documentation() {
    log_demo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    echo ""
    
    log_info "–û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:"
    echo ""
    
    echo -e "${GREEN}üìã testing-methodology.md${NC}"
    echo "  ‚Ä¢ –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∏–∫–∏"
    echo "  ‚Ä¢ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã"
    echo "  ‚Ä¢ –ü—Ä–∏–Ω—Ü–∏–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo ""
    
    echo -e "${BLUE}üìñ testing/README.md${NC}"
    echo "  ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "  ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥"
    echo "  ‚Ä¢ –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫"
    echo ""
    
    echo -e "${YELLOW}üîß –°–∫—Ä–∏–ø—Ç—ã:${NC}"
    echo "  ‚Ä¢ testing/shared/scripts/test-env-manager.sh"
    echo "  ‚Ä¢ testing/shared/scripts/run-tests.sh"
    echo "  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo ""
    
    log_info "–î–ª—è –∏–∑—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"
    echo "  cat testing-methodology.md"
    echo "  cat testing/README.md"
    echo ""
}

# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
quick_start() {
    log_demo "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo ""
    
    log_info "–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:"
    echo ""
    
    echo -e "${GREEN}–®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã${NC}"
    echo "  ./testing/shared/scripts/test-env-manager.sh create env-a"
    echo ""
    
    echo -e "${BLUE}–®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è${NC}"
    echo "  nano testing/env-a/.env.test"
    echo "  # –£–∫–∞–∂–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Novofon"
    echo ""
    
    echo -e "${YELLOW}–®–∞–≥ 3: –ó–∞–ø—É—Å–∫ —Å—Ä–µ–¥—ã${NC}"
    echo "  ./testing/shared/scripts/test-env-manager.sh start env-a"
    echo ""
    
    echo -e "${PURPLE}–®–∞–≥ 4: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤${NC}"
    echo "  ./testing/shared/scripts/run-tests.sh test env-a"
    echo ""
    
    echo -e "${GREEN}–®–∞–≥ 5: –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤${NC}"
    echo "  ./testing/shared/scripts/run-tests.sh results"
    echo ""
    
    log_warning "‚ö†Ô∏è  –í–∞–∂–Ω–æ: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã!"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    show_header
    
    log_info "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è VoIP –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä!"
    echo ""
    
    log_info "–≠—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç:"
    echo "  ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"
    echo "  ‚úÖ –°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å"
    echo "  ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—Ç—ã"
    echo "  ‚úÖ –õ–µ–≥–∫–æ –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    echo ""
    
    if [ "${1:-}" = "--auto" ]; then
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
        show_architectures
        sleep 3
        demo_create_environment
        sleep 3
        demo_testing
        sleep 3
        demo_results
    else
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
        interactive_menu
    fi
}

# –ó–∞–ø—É—Å–∫
main "$@"